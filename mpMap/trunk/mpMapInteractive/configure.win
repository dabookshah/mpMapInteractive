# Software required:
#		Microsoft Visual C++ 2012 Express Edition (aka "For Desktop" edition)
# 		QT 5.* Visual Studio 2012 64-bit binary version from qt-project.org
#
#		Note that I'm not using mingw / gcc / g++ (the standard compiler for R extensions) for this binary chunk because 1) The binary QT MinGW download is 32-bit only and 2) The version of gcc / g++ packaged with Rtools may not be compatible with that used to build QT, I think Rtools tends to package a very specific (and potentially older) version. I suppose you could use the Rtools compiler to build your own QT version from source, but that's not a good solution, better to use as much precompiled stuff as possible. 
#
# Instructions for using:
#1. Make sure the PATH points to 64-bit R (check by running "R" on a command prompt and seeing whether it's 32 or 64 bit)
#2. Open up a Visual Studio 2012 x64 Cross Tools Command Prompt (start menu shortcut)
#3. In the command promput, set the environment variable QT_DIRECTORY to the directory you extracted QT to (I run the command "set QT_DIRECTORY=C:/QtBinary/Qt5.0.2/5.0.2/msvc2012_64/")
#4. Change directory to the mpMapInteractive package root.
#5. Run R CMD INSTALL --no-test-load 
#
#
# NOTE: Using configure.win means that only the 64-bit package version will be built. This is not really a problem, but would be confusing to distribute on CRAN, as people will expect both versions to be built by default. 
# R CMD INSTALL has an internal list of packages which have configure.win and for which both versions should be built by default (list of exceptions basically). We should apply to be put on this list and then later on (a couple of versions of R later) we can include configure.win by default on CRAN
#

if [ ! -e "${R_PACKAGE_DIR}" ]; then
	echo Package directory did not exist
	echo Exiting....
	exit 1
fi
compiler=$(where cl.exe 2> /dev/null)
if [ ${#compiler[@]} = 0 ]; then
	echo Unable to locate microsoft c++ compiler
	echo Exiting....
	exit 1
fi

if [ ! -e "${QT_DIRECTORY}" ]; then
	echo Unable to locate QT directory
	echo Exiting....
	exit 1
fi

cd src
export QMAKESPEC=${QT_DIRECTORY}/mkspecs/win32-msvc2012
${QT_DIRECTORY}/bin/qmake.exe mpMapInteractive.pro

#Generate R.lib 
echo LIBRARY R > R.def
echo EXPORTS >> R.def
dumpbin /exports ${R_HOME}/bin/${R_ARCH}/R.dll | sed -n "s/     ...... .... 0....... \([^ ]*\)/    \1/p" >> R.def
if [ "${R_ARCH}" = "/x64" ]; then
	lib /machine:X64 /nodefaultlib /def:R.def
else
	lib /machine:IX86 /nodefaultlib /def:R.def
fi

mode=debug

mkdir -p "${R_PACKAGE_DIR}/libs/${R_ARCH}/platforms"
mkdir -p "${R_PACKAGE_DIR}/libs/${R_ARCH}"
cp ${QT_DIRECTORY}/bin/d3dcompiler* "${R_PACKAGE_DIR}/libs/${R_ARCH}"
cp "${QT_DIRECTORY}/bin/icudt49.dll" "${R_PACKAGE_DIR}/libs/${R_ARCH}"
cp "${QT_DIRECTORY}/bin/icuuc49.dll" "${R_PACKAGE_DIR}/libs/${R_ARCH}"
cp "${QT_DIRECTORY}/bin/icuin49.dll" "${R_PACKAGE_DIR}/libs/${R_ARCH}"
nmake clean
if [ "$mode" = "release" ]; then
	nmake Release
	cp release/mpMapInteractive.dll "${R_PACKAGE_DIR}/libs/${R_ARCH}"
	cp "${QT_DIRECTORY}/bin/Qt5Core.dll" "${R_PACKAGE_DIR}/libs/${R_ARCH}"
	cp "${QT_DIRECTORY}/bin/Qt5Gui.dll" "${R_PACKAGE_DIR}/libs/${R_ARCH}"
	cp "${QT_DIRECTORY}/bin/Qt5Widgets.dll" "${R_PACKAGE_DIR}/libs/${R_ARCH}"
	cp "${QT_DIRECTORY}/bin/libGLESv2.dll" "${R_PACKAGE_DIR}/libs/${R_ARCH}"
	cp ${QT_DIRECTORY}/bin/d3dcompiler* "${R_PACKAGE_DIR}/libs/${R_ARCH}"

	cp "${QT_DIRECTORY}/plugins/platforms/qwindows.dll" "${R_PACKAGE_DIR}/libs/${R_ARCH}/platforms/"
	cp ${QT_DIRECTORY}/bin/libEGL.dll "${R_PACKAGE_DIR}/libs/${R_ARCH}/"
else
	nmake Debug
	cp debug/mpMapInteractive.dll "${R_PACKAGE_DIR}/libs/${R_ARCH}"
	cp "${QT_DIRECTORY}/bin/Qt5Cored.dll" "${R_PACKAGE_DIR}/libs/${R_ARCH}"
	cp "${QT_DIRECTORY}/bin/Qt5Guid.dll" "${R_PACKAGE_DIR}/libs/${R_ARCH}"
	cp "${QT_DIRECTORY}/bin/Qt5Widgetsd.dll" "${R_PACKAGE_DIR}/libs/${R_ARCH}"
	cp "${QT_DIRECTORY}/bin/libGLESv2d.dll" "${R_PACKAGE_DIR}/libs/${R_ARCH}"

	cp "${QT_DIRECTORY}/plugins/platforms/qwindowsd.dll" "${R_PACKAGE_DIR}/libs/${R_ARCH}/platforms/"
	cp ${QT_DIRECTORY}/bin/libEGLd.dll "${R_PACKAGE_DIR}/libs/${R_ARCH}/"
fi
cd ..

